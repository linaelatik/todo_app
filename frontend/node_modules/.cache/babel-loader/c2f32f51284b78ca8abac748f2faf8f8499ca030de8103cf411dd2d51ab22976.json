{"ast":null,"code":"var _jsxFileName = \"/Users/lina/Desktop/todo_app/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport ListSelector from './ListSelector';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  user,\n  handleLogout\n}) {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [selectedList, setSelectedList] = useState(null);\n  const [newListName, setNewListName] = useState('');\n  const [isCreatingList, setIsCreatingList] = useState(false);\n  useEffect(() => {\n    fetchLists();\n  }, []);\n  const fetchLists = async () => {\n    try {\n      const response = await fetch('/api/lists', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setLists(data.lists);\n\n        // Select the first list by default if available\n        if (data.lists.length > 0 && !selectedList) {\n          setSelectedList(data.lists[0]);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching lists:', error);\n    }\n  };\n  const handleCreateList = async () => {\n    if (!newListName.trim()) return;\n    try {\n      const response = await fetch('/api/lists', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newListName\n        }),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setLists([...lists, data.list]);\n        setSelectedList(data.list);\n        setNewListName('');\n        setIsCreatingList(false);\n      }\n    } catch (error) {\n      console.error('Error creating list:', error);\n    }\n  };\n  const handleDeleteList = async listId => {\n    if (!window.confirm('Are you sure you want to delete this list?')) return;\n    try {\n      const response = await fetch(`/api/lists/${listId}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const updatedLists = lists.filter(list => list.id !== listId);\n        setLists(updatedLists);\n        if (selectedList && selectedList.id === listId) {\n          setSelectedList(updatedLists.length > 0 ? updatedLists[0] : null);\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting list:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hierarchical Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-button\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"My Lists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), !isCreatingList ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsCreatingList(true),\n            className: \"create-list-button\",\n            children: \"+ New List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-list-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newListName,\n              onChange: e => setNewListName(e.target.value),\n              placeholder: \"List name\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-list-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleCreateList,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setIsCreatingList(false);\n                  setNewListName('');\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListSelector, {\n          lists: lists,\n          selectedList: selectedList,\n          onSelectList: setSelectedList,\n          onDeleteList: handleDeleteList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: selectedList ? /*#__PURE__*/_jsxDEV(TodoList, {\n          list: selectedList,\n          lists: lists,\n          onListsChange: fetchLists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No lists available. Create a new list to get started!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"kGxYTsJKnBMio2hUfa+GcWP+2GI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","TodoList","ListSelector","jsxDEV","_jsxDEV","Dashboard","user","handleLogout","_s","lists","setLists","selectedList","setSelectedList","newListName","setNewListName","isCreatingList","setIsCreatingList","fetchLists","response","fetch","credentials","ok","data","json","length","error","console","handleCreateList","trim","method","headers","body","JSON","stringify","name","list","handleDeleteList","listId","window","confirm","updatedLists","filter","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","onClick","type","value","onChange","e","target","placeholder","autoFocus","onSelectList","onDeleteList","onListsChange","_c","$RefreshReg$"],"sources":["/Users/lina/Desktop/todo_app/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport ListSelector from './ListSelector';\nimport '../styles/Dashboard.css';\n\nfunction Dashboard({ user, handleLogout }) {\n  const [lists, setLists] = useState([]);\n  const [selectedList, setSelectedList] = useState(null);\n  const [newListName, setNewListName] = useState('');\n  const [isCreatingList, setIsCreatingList] = useState(false);\n\n  useEffect(() => {\n    fetchLists();\n  }, []);\n\n  const fetchLists = async () => {\n    try {\n      const response = await fetch('/api/lists', {\n        credentials: 'include'\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        setLists(data.lists);\n        \n        // Select the first list by default if available\n        if (data.lists.length > 0 && !selectedList) {\n          setSelectedList(data.lists[0]);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching lists:', error);\n    }\n  };\n\n  const handleCreateList = async () => {\n    if (!newListName.trim()) return;\n    \n    try {\n      const response = await fetch('/api/lists', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ name: newListName }),\n        credentials: 'include'\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        setLists([...lists, data.list]);\n        setSelectedList(data.list);\n        setNewListName('');\n        setIsCreatingList(false);\n      }\n    } catch (error) {\n      console.error('Error creating list:', error);\n    }\n  };\n\n  const handleDeleteList = async (listId) => {\n    if (!window.confirm('Are you sure you want to delete this list?')) return;\n    \n    try {\n      const response = await fetch(`/api/lists/${listId}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      \n      if (response.ok) {\n        const updatedLists = lists.filter(list => list.id !== listId);\n        setLists(updatedLists);\n        \n        if (selectedList && selectedList.id === listId) {\n          setSelectedList(updatedLists.length > 0 ? updatedLists[0] : null);\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting list:', error);\n    }\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <header className=\"dashboard-header\">\n        <h1>Hierarchical Todo</h1>\n        <div className=\"user-info\">\n          <span>Welcome, {user.username}</span>\n          <button onClick={handleLogout} className=\"logout-button\">Logout</button>\n        </div>\n      </header>\n      \n      <div className=\"dashboard-content\">\n        <aside className=\"sidebar\">\n          <div className=\"list-header\">\n            <h2>My Lists</h2>\n            {!isCreatingList ? (\n              <button \n                onClick={() => setIsCreatingList(true)}\n                className=\"create-list-button\"\n              >\n                + New List\n              </button>\n            ) : (\n              <div className=\"new-list-form\">\n                <input\n                  type=\"text\"\n                  value={newListName}\n                  onChange={(e) => setNewListName(e.target.value)}\n                  placeholder=\"List name\"\n                  autoFocus\n                />\n                <div className=\"new-list-actions\">\n                  <button onClick={handleCreateList}>Save</button>\n                  <button onClick={() => {\n                    setIsCreatingList(false);\n                    setNewListName('');\n                  }}>Cancel</button>\n                </div>\n              </div>\n            )}\n          </div>\n          \n          <ListSelector \n            lists={lists} \n            selectedList={selectedList} \n            onSelectList={setSelectedList}\n            onDeleteList={handleDeleteList}\n          />\n        </aside>\n        \n        <main className=\"main-content\">\n          {selectedList ? (\n            <TodoList \n              list={selectedList} \n              lists={lists}\n              onListsChange={fetchLists}\n            />\n          ) : (\n            <div className=\"empty-state\">\n              <p>No lists available. Create a new list to get started!</p>\n            </div>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}